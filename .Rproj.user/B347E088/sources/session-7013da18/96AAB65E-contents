---
title: "Quarto"
description: |
  Full quarto reference
author: "Pua Yong Hao"
date: "`r format(Sys.time(), '%d %B, %Y')`"
categories:
  - more goodies
  - quarto
toc: true
bibliography: bibliography.bib
csl: apmr.csl
image: flow.png
execute:
  warning: false
---



```{r}
library(tidyverse)
library(rms)
library(janitor)
library(here)
options("scipen"= 3, digits = 3)  ## 4 decimal places for digits, 4 decimal places for scientific notation
source(sprintf("%s/PYH Important/PYH Statistics/PYH Using R/pmisc.R", str_extract(here(), ".*:")))
```


## Formatting Text 

This a Quarto document. To learn more about Quarto see <https://quarto.org>.    
Click the **Code** button in the header to see the full source code of this document.   
Here we call the R `summary()` function---the function's output is included immediately below:

# One hex 
## Two hexes  
Two hexes comes with underline  

### Three hexes  
#### Four hexes  
##### Five hexes   

*this is in italic*  and _so is this_

**this is in bold**  and __so is this__

***this is bold and italic***  and ___so is this___


Our recent paper --- authored by Kwok [-@kwok] --- is published in *Age \& Ageing*

Our recent paper [@kwok] is published in *Age \& Ageing*


Add a tab or 2 spaces at the end of the top sentence forces a break between 2 sentences. Compare  
Line 1 and
Line 2 (appear on the same line)

Line 1 and  
Line 2 (on 2 lines)  

This will force  
a break in a single sentence 


Introducing the first footnote[^1] 

Second footnote[^2] 

[^1]: First footnote   

[^2]: Second footnote



~~I do not know RMarkdown~~  `Today I learnt RMarkdown` 


Creating Blank Space using br or nbsp
<br><br><br><br><br><br>

&nbsp;

&nbsp;

&nbsp;


Creating a faint line (note the space after this line)  

******************************************************************************************

## html stuff

<div style="color:red; font-family:Georgia; text-align: right; font-size:0.8em;">
`div` tag: color and fontsize and alignment will work
</div>

<span style="color:red; font-family:Georgia; text-align: right; font-size:0.8em;">
`span` tag: color and fontsize will work; alignment doesnt work 
</span>

<span style = 'font-size:120%' > 
Blah
</span>


<font size="5"> 
<span style="color:red">
why not use the div tag method above?
</span>  
</font>


<center>
Place text in the centre  
**A**ssessing **T**KR **O**utcome **M**easures **i**s **C**rucial
Place text in the centre and alter its size and color (add 2 spaces after this line to break the lines)      
<font size="5"> 
<span style="color:red">
The information ATOMiC provides is not a substitute for clinical judgement
</span>  
</font>
</center>

<!-- Create a highlighted box -->

<style>
div.blue { background-color:#e6f0ff; border-radius: 0px; padding: 0px;}
</style>
<div class = "blue">

> In fact, all epistemological value of the theory of probability is based on this: that large-scale random phenomena in their collective action create strict, nonrandom regularity.  [Gnedenko and Kolmogorov, _Limit Distributions for Sums of Independent Random Variables_, p. 1]

> **Challenge:**  
> **Try** to mimic the output of the following: 
</div>


::: {.callout-note collapse="true"}
# Callout notes and itemization 
This report makes heavy use of the following R packages and Github repository:

* [`Hmisc` package](https://hbiostat.org/R/Hmisc) which contains functions for importing data  
* [`rscripts` Github repository](https://github.com/harrelfe/rscripts) with utility functions such as
   + `dataChk` for data checking
   + `hashCheck` for checking if parent objects have changed so a slow analysis has to be re-run (i.e., talking control of caching)

All the available help files for functions in `rscripts` are at [hbiostat.org/R/rscripts](https://hbiostat.org/R/rscripts).  To view a help file for one of the functions in the `RStudio` `Viewer` pane use for example `rsHelp(movStats)` or `rsHelp(reptools)`.
:::

::: {.column-margin}
Adding text and codes on the margin 
```{r}
#| eval: false
html(describe(d))
table(sex, country)
# use pr(obj=table(sex, country))
# to fix
```

:::


::: {.panel-tabset}
## Categorical Variables
```{r pdesccat}
mtcars$cyl
```

## Continuous Variables
```{r pdesccon}
mtcars$qsec
```

:::



# `rms` 



::: {.callout-note .column-page collapse="true"}
## rms::`describe` Output
```{r }
#| results: 'asis'
w <- describe(mtcars)
html(w)
```
:::


```{r}
d <- describe(mtcars, descript="Demographics and Preop and M3 Postoperative Outcomes")
html(d, size=80, scroll=TRUE)
```

```{r}
#| column: page
# column: screen causes extreme leftward shift
html(d, size=80, scroll=TRUE)
```

```{r}
summary(cars)
```



## rms::`summaryM` Output
```{r }
#| results: 'asis'
#| column: page
mtcars2 <-upData(mtcars,
                 vs = factor(vs, 0:1, c("Gp1","Gp2") ), 
                 labels=c(qsec ="<b>Demographics</b><br> &nbsp;&nbsp;Age (years)",
                          age ="Age (years)",
                          women = "Women",
                          weight  = "Weight (kg)",
                          height  = "Height (m)",
                          mpg = "Weight (kg)",
                          am = "BMI (kg/m<sup>2</sup>)"))


# brmsd=TRUE, ## 2 rows, no brackets for Mean +/-SD 
yhsummarym(
  summaryM(qsec + mpg + am  ~  vs, continuous = 4, overall=FALSE, test=TRUE, data = mtcars2), 
  brmsd=TRUE, ## no breaks, single row (Mean +/-SD) with brackets
  caption = "<b> Table 1</b>. Patient Characteristics", 
  viewer=FALSE)

```


# Figure Pics  (png, jpeg)
## Figure Insert 

Use `column: page` and `out.width` to expand figure
```{r}
#| label: fig-flowchart1
#| fig-cap: "Flowchart of the study"
#| warning: false
#| column: page
#| echo: false
#| out.width: "1000px"
knitr::include_graphics("flow.png")
```



```{r}
#| label: fig-flowchart2
#| fig-cap: "Crossover between KOOS and Stair Descent Assessment levels preoperatively (left panel) and 3 months postoperatively (right panel). Box height and connectng band size are proportional to the number of participants."
#| warning: false
#| cap-location: margin
#| echo: false

knitr::include_graphics("flow.png")
```


Using layout method 

We use this hack method to create side-by-side fig for pmc overview.qmd: 
![Surus](flow.png){width=200}{} 



::: {#fig-fig2 layout-ncol=2}

![Surus](flow.png){#fig-surus}

![Hanno](lrm-1.png){#fig-hanno}

Famous Elephants
:::
 




::: {layout="[[70,30], [100]]"}
![Surus](lrm-1.png)

![Hanno](flow.png)

![Lin Wang](lrm-1.png)
:::


::: {layout="[[1,1], [1]]"}
![Surus](flow.png)

![Hanno](flow.png)

![Lin Wang](flow.png)
:::
















## Figure R Plot Output

You can also embed plots, for example:

```{r}
#| label: fig-pressure
#| fig-cap: "Pressure"
#| fig-width: 6.6
#| fig-height: 8.2
#| warning: false
#| cap-location: margin
#| code-fold: true


library(ggplot2)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
                  xvar = 1:20 + rnorm(20,sd=3),
                  yvar = 1:20 + rnorm(20,sd=3))

ggplot(dat, aes(x=xvar, y=yvar)) +
    geom_point(shape=1) + 
    geom_smooth() 
```

Note that the `code-fold: true` parameter was added to the code chunk to hide the code by default (click "Code" above the plot to see the code).

Cross-referencing
The use of the `label` and `fig-cap` options make this a cross-referenceable figure (see @fig-pressure).  
Also see the flowchart (see @fig-flowchart1).  







## Interactivity

You can also add interactive plots. For example:

```{r}
#| label: fig-temperatures
#| fig-cap: "New Haven Temperatures"

library(dygraphs)
dygraph(nhtemp) %>% 
  dyRangeSelector(dateWindow = c("1920-01-01", "1960-01-01"))
```

# Tables

Use the `knitr::kable()` function to print tables as HTML:

```{r}
knitr::kable(head(ggplot2::diamonds))
```


```{r }
#| column: page
library(kableExtra)
mtcars %>% 
  head(10) %>% 
  kbl(format = "markdown") %>% 
  kable_classic(full_width = F, html_font = "Cambria")

```


```{r }
#| column: page
# https://cran.r-project.org/web/packages/kableExtra/vignettes/awesome_table_in_html.html
library(kableExtra)
mtcars %>% 
  head(10) %>% 
  kbl(caption = "Recreating booktabs style table")  %>% 
  kable_classic(full_width = F, html_font = "Cambria") %>% 
  footnote(general = "Here is a general comments of the table. ",
           number = c("Footnote 1; ", "Footnote 2; "),
           alphabet = c("Footnote A; ", "Footnote B; "),
           symbol = c("Footnote Symbol 1; ", "Footnote Symbol 2")
           )

```


## LaTeX Math

You can also include LaTeX math:

$$
P\left(A=2\middle|\frac{A^2}{B}>4\right)
$$